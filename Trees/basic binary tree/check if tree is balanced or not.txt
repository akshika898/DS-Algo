boolean isBalanced(Node node) 
    { 
        int lh, rh; 
    
        if (node == null) 
            return true; 
  
        lh = height(node.left); 
        rh = height(node.right); 
  
        if (Math.abs(lh - rh) <= 1 &&  isBalanced(node.left) && isBalanced(node.right)) 
            return true; 
  
        return false; 
    } 

    int height(Node node) 
    { 
        if (node == null) 
            return 0; 

        return 1 + Math.max(height(node.left), height(node.right)); 
    } 


or
int solve(Node root)
{
    if(root==null)
    return 0;
    
    int l=solve(root.left);
    if l == -1 
        return -1;
    int r=solve(root.right);
    if r == -1
       return -1;
    int diff=Math.abs(l-r);
    if(diff>1)
        return -1;
    return Math.max(l,r)+1;
    
}
