static Stack<node> s1, s2; 
  
    static void postOrderIterative(node root) 
    { 
        s1 = new Stack<>(); 
        s2 = new Stack<>(); 
  
        if (root == null) 
            return; 
        s1.push(root); 
        while (!s1.isEmpty()) { 
            node temp = s1.pop(); 
            s2.push(temp); 
 
            if (temp.left != null) 
                s1.push(temp.left); 
            if (temp.right != null) 
                s1.push(temp.right); 
        } 
 
        while (!s2.isEmpty()) { 
            node temp = s2.pop(); 
            System.out.print(temp.data + " "); 
        } 
    } 
  



using 1 stack

static void postOrderTrav(Node cur) {

        if (cur == null) return postOrder;

        Stack < Node > st = new Stack < > ();
        while (cur != null || !st.isEmpty()) {
            if (cur != null) {
                st.push(cur);
                cur = cur.left;
            } else {
                Node temp = st.peek().right;
                if (temp == null) {
                    temp = st.pop();
                    System.out.print(temp.data + " "); 
                    while (!st.isEmpty() && temp == st.peek().right) {
                        temp = st.pop();
                        System.out.print(temp.data + " ");
                    }
                } else cur = temp;
            }
        }
        return postOrder;


    }
