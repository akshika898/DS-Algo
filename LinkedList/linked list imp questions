1. Write a program to get the “N th ” Node from the end of the Singly Linked List. ✔

2. Write a Program to check whether the Singly Linked list is a palindrome or not. ✔

3. Write a Program to reverse the Linked List. (Both Iterative and recursive)  

4. Reverse a Linked List in group of Given Size. [Very Imp] ✔

5. Write a program to Detect loop in a linked list. ✔

6. Write a program to find the length of loop in the linked list and remove loop, find start. ✔ 

7. Reverse alternate k nodes of a linked list. ✔

8. Remove Duplicates in a sorted Linked List. ✔

9. Remove Duplicates in a Unsorted Linked List. ✔

10.Write a Program to Move the last element to Front in a Linked list. ✔

11.Add “1” to a number represented as a Linked List. ✔

12.Add two numbers represented by linked lists. ✔

13.Intersection of two Sorted Linked List. ✔

14.Intersection Point of two Linked Lists. ✔

15.Merge Sort For Linked lists.[Very Important]

16.Quicksort for Linked Lists.[Very Important]

17.Find the middle Element of a linked list. ✔

18.Check if a linked list is a circular linked list. ✔

19.Split a Circular linked list into two halves. ✔

20.Deletion from a Circular Linked List. ✔

21.Count Nodes in a Circular Linked List.  ✔

22.Exchange first and last nodes in a circular linked list. ✔

23.Reverse a Doubly Linked list.

24.Find pairs with a given sum in a DLL.

25.Count triplets in a sorted DLL whose sum is equal to given value “X”.

26.Sort a “k” sorted Doubly Linked list.[Very IMP]

27.Rotate Doubly Linked list by N nodes.

28.Rotate a Doubly Linked list in group of Given Size.[Very IMP]

29.Can we reverse a linked list in less than O(n) ?  ✔

30.Why Quicksort is preferred for. Arrays and Merge Sort for Linked.  ✔

31. Swap nodes in pairs in ll ✔

32. Binary no. to integerin  linked list. ✔

33. Delete nodes that have greater value on right side in a linked list. ✔
 
34. Sort odd and even elements in a ll. ✔
