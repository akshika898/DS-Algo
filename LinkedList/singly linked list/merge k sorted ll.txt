Node mergeKLists(Node[] lists) {
   PriorityQueue<Integer> minheap=new PriorityQueue<>(); // min heap
        for(Node head:lists)
        {
            if(head!=null)
            {
                minheap.add(head);
            }
        }
        
        
       Node l=new ListNode(0);
       Node temp=l;
        while(!minheap.isEmpty())
        {
            ListNode minNode = minHeap.remove();
            temp.next = minNode;
            temp = temp.next;
            
            // Move to the next node in the list
            if (minNode.next != null) {
                minHeap.offer(minNode.next);
            }
        }
        return l.next;
    }
}
