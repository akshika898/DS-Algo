You are given a string s. You can convert s to a 
palindrome
 by adding characters in front of it.

Return the shortest palindrome you can find by performing this transformation.

 

Example 1:

Input: s = "aacecaaa"
Output: "aaacecaaa"
Example 2:

Input: s = "abcd"
Output: "dcbabcd"



find longest pallindromic substr from start and add remaing chars to front

class Solution {
    public String shortestPalindrome(String s) {
        String temp = s;
        s += "#" + new StringBuilder(s).reverse().toString();
        int[] lps = new int [s.length()];
        lps[0] = 0;
        int i = 0, j = 1;
        while(j < s.length()){
            if(s.charAt(i) == s.charAt(j)){
                lps[j] = i + 1;
                i++;
                j++;
            } else {
                if (i==0){
                    lps[j] = i;
                    j++;
                } else {
                    i = lps[i-1];
                }
            }
        }
        return new StringBuilder(temp.substring(lps[lps.length-1])).reverse().toString() + temp;
    }
}
