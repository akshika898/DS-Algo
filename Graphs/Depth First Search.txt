class Solution {
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        Map<Integer, Boolean> visited = new HashMap<> ();
        ArrayList<Integer> ans = new ArrayList<> ();
        for(int i=0;i<V;i++) {
            if(!visited.containsKey(i) || !visited.get(i)){
                dfs(adj, ans, visited, i);
            }
        }
        return ans;
    }
    
    public void dfs(ArrayList<ArrayList<Integer>> adj, ArrayList<Integer> ans, Map<Integer, Boolean> visited, int node) {
        ans.add(node);
        visited.put(node, true);

        for (int i: adj.get(node)) {
            if(!visited.containsKey(i) || !visited.get(i)){
                dfs(adj, ans, visited, i);
            }
        }
    }
}
