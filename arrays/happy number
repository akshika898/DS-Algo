A happy number is a number defined by the following process:

Starting with any positive integer, replace the number by the sum of the squares of its digits.
Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
Those numbers for which this process ends in 1 are happy.
Return true if n is a happy number, and false if not.

Input: n = 19
Output: true
Explanation:
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1
Example 2:

Input: n = 2
Output: false

class Solution {
    public boolean isHappy(int n) {
        if (n==1) {
            return true;
        }
        Set<Integer> s = new HashSet<>();
        int sum = 0;
        while(sum != 1){
            sum = 0;
            while(n != 0) {
                int rem = n%10;
                sum += (rem*rem);
                n = n/10;
            }
            if (s.contains(sum)){
                return false;
            }
            s.add(sum);
            n = sum;
        }
        if (sum == 1){
            return true;
        }
        return false;
        
    }
}
